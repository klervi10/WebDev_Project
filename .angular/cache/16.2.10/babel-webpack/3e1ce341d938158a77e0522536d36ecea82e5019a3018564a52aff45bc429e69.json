{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"@angular/common\";\nfunction HomeComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"img\", 1);\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.Meals.strMeal);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", ctx_r0.Meals.strMeal);\n    i0.ɵɵproperty(\"src\", ctx_r0.Meals.strMealThumb, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.Meals.strInstructions);\n  }\n}\nexport class HomeComponent {\n  constructor(mealService) {\n    this.mealService = mealService;\n    this.Meals = [];\n    this.currentDate = new Date();\n  }\n  ngOnInit() {\n    this.currentDate = new Date();\n    this.currentMonth = this.mealService.getMonthName(this.currentDate.getMonth());\n    this.currentDay = this.mealService.getDayOfWeek(this.currentDate.getDay());\n    this.mealService.loadRandomMeal().subscribe(data => console.log(data));\n    this.mealService.getDishes().subscribe(\n    // La data est maintenant un observable donc on doit y souscrire. \n    data => this.Meals = data);\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 8,\n    vars: 5,\n    consts: [[4, \"ngIf\"], [3, \"src\", \"alt\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Bienvenue sur la page d'accueil\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4, \"Cette page est le point d'entr\\u00E9e de notre application...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, HomeComponent_div_7_Template, 6, 4, \"div\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate4(\"Today, we are the \", ctx.currentDay, \", \", ctx.currentDate.getDate(), \" \", ctx.currentMonth, \", \", ctx.currentDate.getFullYear(), \".\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.Meals);\n      }\n    },\n    dependencies: [i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","Meals","strMeal","ɵɵpropertyInterpolate","ɵɵproperty","strMealThumb","ɵɵsanitizeUrl","strInstructions","HomeComponent","constructor","mealService","currentDate","Date","ngOnInit","currentMonth","getMonthName","getMonth","currentDay","getDayOfWeek","getDay","loadRandomMeal","subscribe","data","console","log","getDishes","_","ɵɵdirectiveInject","i1","DataService","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵtemplate","HomeComponent_div_7_Template","ɵɵtextInterpolate4","getDate","getFullYear"],"sources":["/Users/kle7basket/angular/WebDev_Project/src/app/home/home.component.ts","/Users/kle7basket/angular/WebDev_Project/src/app/home/home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n  Meals: any[] = []\n\n  constructor(private mealService: DataService) {}\n  \n  currentDate: Date = new Date();\n  currentMonth!: string;\n  currentDay!: string;\n\n  ngOnInit(): void {\n    this.currentDate = new Date();\n    this.currentMonth = this.mealService.getMonthName(this.currentDate.getMonth());\n    this.currentDay = this.mealService.getDayOfWeek(this.currentDate.getDay());\n\n    this.mealService.loadRandomMeal().subscribe(\n      data => console.log(data)\n    );\n\n    this.mealService.getDishes().subscribe( // La data est maintenant un observable donc on doit y souscrire. \n            (data => this.Meals = data)\n        )\n  }\n\n}\n","<div>\n    <h2>Bienvenue sur la page d'accueil</h2>\n    <p>Cette page est le point d'entrée de notre application...</p>\n    <p>Today, we are the {{ currentDay }}, {{ currentDate.getDate() }} {{ currentMonth }}, {{ currentDate.getFullYear() }}.</p>\n    <div *ngIf=\"Meals\">\n      <h3>{{ Meals.strMeal }}</h3>\n      <img [src]=\"Meals.strMealThumb\" alt=\"{{ Meals.strMeal }}\">\n      <p>{{ Meals.strInstructions }}</p>\n    </div>\n  </div>"],"mappings":";;;;;ICIIA,EAAA,CAAAC,cAAA,UAAmB;IACbD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC5BH,EAAA,CAAAI,SAAA,aAA0D;IAC1DJ,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAA2B;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAF9BH,EAAA,CAAAK,SAAA,GAAmB;IAAnBL,EAAA,CAAAM,iBAAA,CAAAC,MAAA,CAAAC,KAAA,CAAAC,OAAA,CAAmB;IACST,EAAA,CAAAK,SAAA,GAAyB;IAAzBL,EAAA,CAAAU,qBAAA,QAAAH,MAAA,CAAAC,KAAA,CAAAC,OAAA,CAAyB;IAApDT,EAAA,CAAAW,UAAA,QAAAJ,MAAA,CAAAC,KAAA,CAAAI,YAAA,EAAAZ,EAAA,CAAAa,aAAA,CAA0B;IAC5Bb,EAAA,CAAAK,SAAA,GAA2B;IAA3BL,EAAA,CAAAM,iBAAA,CAAAC,MAAA,CAAAC,KAAA,CAAAM,eAAA,CAA2B;;;ADEpC,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAT,KAAK,GAAU,EAAE;IAIjB,KAAAU,WAAW,GAAS,IAAIC,IAAI,EAAE;EAFiB;EAM/CC,QAAQA,CAAA;IACN,IAAI,CAACF,WAAW,GAAG,IAAIC,IAAI,EAAE;IAC7B,IAAI,CAACE,YAAY,GAAG,IAAI,CAACJ,WAAW,CAACK,YAAY,CAAC,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE,CAAC;IAC9E,IAAI,CAACC,UAAU,GAAG,IAAI,CAACP,WAAW,CAACQ,YAAY,CAAC,IAAI,CAACP,WAAW,CAACQ,MAAM,EAAE,CAAC;IAE1E,IAAI,CAACT,WAAW,CAACU,cAAc,EAAE,CAACC,SAAS,CACzCC,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAC1B;IAED,IAAI,CAACZ,WAAW,CAACe,SAAS,EAAE,CAACJ,SAAS;IAAE;IAC/BC,IAAI,IAAI,IAAI,CAACrB,KAAK,GAAGqB,IAAK,CAC9B;EACP;EAAC,QAAAI,CAAA,G;qBArBUlB,aAAa,EAAAf,EAAA,CAAAkC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbtB,aAAa;IAAAuB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT1B5C,EAAA,CAAAC,cAAA,UAAK;QACGD,EAAA,CAAAE,MAAA,sCAA+B;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACxCH,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,oEAAwD;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC/DH,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,GAAoH;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC3HH,EAAA,CAAA8C,UAAA,IAAAC,4BAAA,iBAIM;QACR/C,EAAA,CAAAG,YAAA,EAAM;;;QANDH,EAAA,CAAAK,SAAA,GAAoH;QAApHL,EAAA,CAAAgD,kBAAA,uBAAAH,GAAA,CAAArB,UAAA,QAAAqB,GAAA,CAAA3B,WAAA,CAAA+B,OAAA,SAAAJ,GAAA,CAAAxB,YAAA,QAAAwB,GAAA,CAAA3B,WAAA,CAAAgC,WAAA,QAAoH;QACjHlD,EAAA,CAAAK,SAAA,GAAW;QAAXL,EAAA,CAAAW,UAAA,SAAAkC,GAAA,CAAArC,KAAA,CAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}