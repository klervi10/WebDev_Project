{"ast":null,"code":"import { map, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(HttpClient) {\n    this.HttpClient = HttpClient;\n    this.meals = [];\n  }\n  getMonthName(monthIndex) {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return months[monthIndex];\n  }\n  getDayOfWeek(dayIndex) {\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    return days[dayIndex];\n  }\n  getDishes() {\n    return this.HttpClient.get('https://www.themealdb.com/api/json/v1/1/search.php?f=a').pipe(tap(data => console.log(data)), map(data => data.meals), tap(data => console.log(data)), map(data => {\n      const res = [];\n      for (let i = 0; i < data.length; i++) {\n        res.push({\n          name: data[i].nom,\n          description: data[i].description,\n          img: data[i].image\n        });\n      }\n      console.log(res);\n      return res;\n    }));\n  }\n  loadRandomMeal() {\n    return this.HttpClient.get('https://www.themealdb.com/api/json/v1/1/search.php?f=a');\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","tap","DataService","constructor","HttpClient","meals","getMonthName","monthIndex","months","getDayOfWeek","dayIndex","days","getDishes","get","pipe","data","console","log","res","i","length","push","name","nom","description","img","image","loadRandomMeal","_","i0","ɵɵinject","i1","_2","factory","ɵfac","providedIn"],"sources":["/Users/kle7basket/angular/WebDev_Project/src/app/data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map, tap  } from 'rxjs';\nimport { Meals } from './meals';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  meals: any[] = []\n    \n\n  constructor(private HttpClient: HttpClient) {\n  }  \n\n  getMonthName(monthIndex: number): string {\n    const months = [\n      'January', 'February', 'March', 'April',\n      'May', 'June', 'July', 'August',\n      'September', 'October', 'November', 'December'\n    ];\n    return months[monthIndex];\n  }\n  \n  getDayOfWeek(dayIndex: number): string {\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    return days[dayIndex];\n  }\n  \n  getDishes(): Observable<Meals[]>{\n    return this.HttpClient.get<any[]>('https://www.themealdb.com/api/json/v1/1/search.php?f=a').pipe(\n      tap((data: any) => console.log(data)),\n      map((data: any) => data.meals),\n      tap((data: any) => console.log(data)),\n      map((data: any) => {\n        const res: Meals[] = [];\n        for( let i=0; i<data.length; i++){\n          res.push({\n            name: data[i].nom,\n            description: data[i].description, \n            img: data[i].image,\n          });\n        }\n        console.log(res);\n        return res;\n      }),\n    );\n  }\n\n\n  loadRandomMeal() {\n    return this.HttpClient.get('https://www.themealdb.com/api/json/v1/1/search.php?f=a')\n\n  }​\n}\n\n\n"],"mappings":"AAEA,SAAqBA,GAAG,EAAEC,GAAG,QAAS,MAAM;;;AAM5C,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAH9B,KAAAC,KAAK,GAAU,EAAE;EAIjB;EAEAC,YAAYA,CAACC,UAAkB;IAC7B,MAAMC,MAAM,GAAG,CACb,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EACvC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAC/B,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAC/C;IACD,OAAOA,MAAM,CAACD,UAAU,CAAC;EAC3B;EAEAE,YAAYA,CAACC,QAAgB;IAC3B,MAAMC,IAAI,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;IAC3F,OAAOA,IAAI,CAACD,QAAQ,CAAC;EACvB;EAEAE,SAASA,CAAA;IACP,OAAO,IAAI,CAACR,UAAU,CAACS,GAAG,CAAQ,wDAAwD,CAAC,CAACC,IAAI,CAC9Fb,GAAG,CAAEc,IAAS,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,EACrCf,GAAG,CAAEe,IAAS,IAAKA,IAAI,CAACV,KAAK,CAAC,EAC9BJ,GAAG,CAAEc,IAAS,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,EACrCf,GAAG,CAAEe,IAAS,IAAI;MAChB,MAAMG,GAAG,GAAY,EAAE;MACvB,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACJ,IAAI,CAACK,MAAM,EAAED,CAAC,EAAE,EAAC;QAC/BD,GAAG,CAACG,IAAI,CAAC;UACPC,IAAI,EAAEP,IAAI,CAACI,CAAC,CAAC,CAACI,GAAG;UACjBC,WAAW,EAAET,IAAI,CAACI,CAAC,CAAC,CAACK,WAAW;UAChCC,GAAG,EAAEV,IAAI,CAACI,CAAC,CAAC,CAACO;SACd,CAAC;;MAEJV,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;MAChB,OAAOA,GAAG;IACZ,CAAC,CAAC,CACH;EACH;EAGAS,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACvB,UAAU,CAACS,GAAG,CAAC,wDAAwD,CAAC;EAEtF;EAAC,QAAAe,CAAA,G;qBA9CU1B,WAAW,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAA3B,UAAA;EAAA;EAAA,QAAA4B,EAAA,G;WAAX9B,WAAW;IAAA+B,OAAA,EAAX/B,WAAW,CAAAgC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}